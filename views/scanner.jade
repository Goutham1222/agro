extends layout

block content
  h1 QR / Barcode Scanner
  #scanner-container(style="text-align:center; color:white;") Loading camera...
  select#cameraSelect(style="display:none; margin:10px auto;")
  p#status(style="text-align:center; color:yellow; margin-top:10px;") Waiting for permission...
  p#result(style="text-align:center; color:#fff; margin-top:10px;") Result: None

block scripts
  script(src="https://unpkg.com/html5-qrcode/minified/html5-qrcode.min.js")
  script.
    const resultEl = document.getElementById('result');
    const statusEl = document.getElementById('status');
    const cameraSelect = document.getElementById('cameraSelect');
    const html5QrCode = new Html5Qrcode("scanner-container");
    let currentCameraId = null;

    function startCamera(cameraId) {
      statusEl.innerText = "üé• Starting camera...";
      html5QrCode.start(
        cameraId,
        { fps: 10, qrbox: { width: 250, height: 250 } },
        decodedText => {
          resultEl.innerText = "‚úÖ Result: " + decodedText;
          html5QrCode.stop();
        },
        err => {}
      ).then(() => {
        statusEl.innerText = "‚úÖ Camera active.";
      }).catch(err => {
        console.error("Camera start error:", err);
        statusEl.innerText = "‚ùå " + err.message;
      });
    }

    Html5Qrcode.getCameras().then(cameras => {
      console.log("Detected cameras:", cameras);
      if (!cameras.length) {
        statusEl.innerText = "‚ùå No camera found.";
        return;
      }

      // Show camera selector if more than one
      if (cameras.length > 1) {
        cameraSelect.style.display = "block";
        cameras.forEach(cam => {
          const option = document.createElement('option');
          option.value = cam.id;
          option.text = cam.label || `Camera ${cameraSelect.length + 1}`;
          cameraSelect.appendChild(option);
        });
        cameraSelect.onchange = e => {
          html5QrCode.stop().then(() => startCamera(e.target.value));
        };
      }

      currentCameraId = cameras[0].id;
      startCamera(currentCameraId);
    }).catch(err => {
      console.error("getCameras error:", err);
      statusEl.innerText = "‚ö†Ô∏è Cannot access camera: " + err.message;
    });
